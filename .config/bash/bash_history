read -d , <<< $(xgamma)
read -d , <<< $(xgamma)
read -d , -t colors <<< $(xgamma)
read -d , -t arr <<< $(xgamma)
read -d , -a colors <<< $(xgamma)
echo $colors
echo $colors[0]
echo ${colors[0]}
read -d , -a colors <<< $(xgamma)
echo ${colors[0]}
read -d , -a colors <<< $"xgamma"
echo ${colors[0]}
read -d , -a colors <<< "$xgamma"
echo ${colors[0]}
echo ${colors[0]}
echo ${colors[1]}
read -d , -a colors <<< '$xgamma'
echo ${colors[1]}
read -d , -a colors <<< ($xgamma)
read -d , -a colors <<< $(xgamma)
in = $(xgamma)
in = xgamma
read -d , -a colors <<< $(xgamma)
var=$(xgamma)
echo $var
echo "$var"
xgamma
xgamma -H
xgamma -gamma
xgamma 
man egrep
man egrep
xgamma | cut -d ,
xgamma | cut -d","
echo $(xgamma)
echo $(xgamma) | cut -d","
xgamma | cut -d','
cut --help
awk
echo $(xgamma)
echo $(xgamma) | awk '{ print $7; }'
echo $(xgamma) | awk '{ print $7; }'
echo $(xgamma) | cut -d ' ' -f 7
echo $(xgamma) | awk '{ print $7; }'
echo "$(xgamma)" | awk '{ print $7; }'
echo $(xgamma) | awk '{ print $7; }'
out=$(xgamma)
echo "${var}"
echo "${out}"
xgamma >> out
ls
cat ou
cat out
rm out
exit
var=$(xgamma)
echo $var
echo ${var[0]}
xgamma
echo $(xgamma) | awk '{ print $7; }'
xgamma | awk '{ print $7; }'
echo -> Red  1.000, Green  1.000, Blue  1.000 | awk '{ print $7; }'
echo -> Red  1.000, Green  1.000, Blue  1.000 | awk '{ print $6; }'
echo -> Red  1.000, Green  1.000, Blue  1.000 | awk '{ print $2; }'
echo $(xgamma) | tr -s ' ' | cut -d ' ' -f 7
echo $(xgamma) | tr -s ' ' | cut -d ' ' -f 4
echo $(xgamma) | cut -d ' ' -f 4
echo $(xgamma) | cut -d ' ' 
echo $(xgamma) | cut -d ' ' -f 1
echo $(xgamma) | cut -d ' ' -f 
echo $(xgamma) | cut -d ' ' -f 0
echo $(xgamma) | cut -d ' ' -f 7
echo -> Red  1.000, Green  1.000, Blue  1.000 | cut -d ' ' -f 7
echo -> Red  1.000, Green  1.000, Blue  1.000 | cut -d ' ' -f 3
echo -> Red  1.000, Green  1.000, Blue  1.000 | cut -d ' ' -f 7
echo "-> Red  1.000, Green  1.000, Blue  1.000" | cut -d ' ' -f 7
echo $(xgamma) | cut -d ' ' -f 7
xgamma | tr -s ' ' | cut -d ' ' -f 7
xgamma | tr -s ' ' | cut -d ' ' -f 7
xgamma | tr -s ' ' | cut -d ' ' -f 7
xgamma | tr -s ' ' | cut -d ' ' -f 7
xgamma | tr -s ' ' | cut -d ' ' -f 7
xbackligh
xbacklight
xbacklight -h
xbacklight dec 10
xbacklight dec 10
xbacklight dec 10%
xbacklight dec -10
xbacklight -dec 10
xbacklight -inc 1p
xbacklight -inc 10
xbacklight -inc 10
xgamma
echo -e "$(xgamma)"
echo -e "$(xgamma)"
echo "-> Red  1.000, Green  1.000, Blue  1.000" | cut -d ' ' -f 7
echo "-> Red  1.000, Green  1.000, Blue  1.000" | tr -s ' ' | cut -d ' ' -f 7
if [ ps -a | grep clight | tr -s ' ' | cut -d " " -f 5 ]; echo "si"; else
vim .bashrc 
if [ ps -a | grep clight | tr -s ' ' | cut -d " " -f 5 ] then; echo "si"; else
vim .bashrc
if [ ps -a | grep clight | tr -s ' ' | cut -d " " -f 5 ] ; then echo "si"; else echo "no"; fi
exit
if [[ ps -a | grep clight | tr -s ' ' | cut -d " " -f 5 ]]
exit
if [ -z $(ps -a | grep clight | tr -x ' ' | cut -d " " -f 5) ]; echo "si"; else echo "no"
vim .bashrc
if [ -z $(ps -a | grep clight | tr -x ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
if [ -z $(ps -a | grep clight | tr -s ' ' | cut -d " " -f 5) ]; then echo "si"; else echo "no"; fi
exit
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
exit
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
awk '/%/ {gsub(/[\[\]]/,""); print $4}' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $1 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $3 }' <(amixer sget Master)
awk -F"[][]" '/dB/ { print $0 }' <(amixer sget Master)
man amixer
amixer info
amixer get
amixer get volume
amixer get front
amixer get frontleft
amixer 
amixer sget Master | grep [][]
amixer sget Master | grep [][] | unique
amixer sget Master | grep [][] 
amixer sget Master | grep [][] | grep Left
amixer sget Master | grep [][] | grep Left | cut -d " " -f 5
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7 | cut -d "[" -f 2
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7 | cut -d "[" -f 2 | cut -d "]" -f 1
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7 | cut -d "[" -f 2 | cut -d "]" -f 1
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7 | cut -d "[" -f 2 | cut -d "%]" -f 1
amixer sget Master | grep [][] | grep Left | cut -d " " -f 7 | cut -d "[" -f 2 | cut -d "%" -f 1
SUDO_ASKPASS="/usr/bin/rofi -password -dmenu"
sudo -A pacman -Syu
echo $SUDO_ASKPASS
man sudo
exit
export TERM=st
exit
exit
ex
ex hola
exit
export XDG_CONFIG_HOME=$HOME/.config
echo $XDG_CONFIG_HOME
exit
ls
exit
exit
cd lightdm/
cd root/
ls -a
